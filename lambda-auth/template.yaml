AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-auth - Função Lambda para autenticação de clientes

Globals:
  Function:
    Timeout: 20
    MemorySize: 512
    Runtime: java17

Resources:
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth.App::handleRequest
      Runtime: java17
      Architectures:
        - x86_64
      CodeUri: MyAuthFunction/
      Environment:
        Variables:
          SECRET_KEY: "your-secret-key"
          API_GATEWAY_BACKEND_URL: "https://ro4ghw5iqe.execute-api.us-east-2.amazonaws.com/prod"
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        Authenticate:
          Type: Api
          Properties:
            Path: /authenticate
            Method: post
            Auth:
              ApiKeyRequired: true

  ApiGatewayUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: ServerlessRestApiProdStage
    Properties:
      UsagePlanName: MyAuthFunctionUsagePlan
      ApiStages:
        - ApiId: !Ref ServerlessRestApi
          Stage: Prod
      Throttle:
        RateLimit: 10
        BurstLimit: 2

  ApiGatewayApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: ServerlessRestApiProdStage
    Properties:
      Name: MyAuthFunctionApiKey
      Enabled: true
      StageKeys:
        - RestApiId: !Ref ServerlessRestApi
          StageName: Prod

Outputs:
  MyAuthApi:
    Description: "API Gateway endpoint URL for MyAuthFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/authenticate"
  MyAuthFunctionArn:
    Description: "MyAuth Lambda Function ARN"
    Value: !GetAtt MyAuthFunction.Arn
  MyAuthFunctionApiKey:
    Description: "API Key for accessing the API Gateway"
    Value: !Ref ApiGatewayApiKey
